#labels googlereaderapi
=google reader api 介绍=

在开发R2过程中总结出来的 api，虽然已经有了pyrfeed的分析在前了，这里提供一个实践版。


== 客户端认证 ==
  * 这一部分是google通用的clientLogin机制
  * 请求URL:https://www.google.com/accounts/ClientLogin
  * 方法:POST
  * 参数:
    # accountType=HOSTED_OR_GOOGLE
    # Email=somebody@gmail.com
    # Passwd = youpassword
    # service=reader
    # source = clientstr (如：J-R2-1.0)
  * 返回：认证文本字符串,auth和sid这是两个比较重要的标识，在以后的api请求中，都必须在header中带有这两个信息,同时cookie中也要设置下SID

  * 代码示范:
   {{{

    var email = message.email;
    var passwd = message.passwd;
    var auth,sid
    var auth_params = "accountType=HOSTED_OR_GOOGLE&Email="+email+"&Passwd="+passwd+"&service=reader&source=J-MyReader-1.0";
    var http = new XMLHttpRequest()
    http.onreadystatechange = function() {
        if (http.readyState == XMLHttpRequest.DONE) {
            if(http.status==200){
                var arrs = http.responseText.split('\n')
                for(var idx in arrs){
                    var arr = arrs[idx]
                    //console.log(arr+"\n\n");
                    var tmp = arr.split('=');
                    if(tmp[0]=="Auth"){
                        auth = tmp[1];
                    }else if(tmp[0]=="SID"){
                        sid = tmp[1];
                    }
                }
            }
        }
    }
    http.open("POST", "https://www.google.com/accounts/ClientLogin");
    http.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
    http.setRequestHeader("Content-Length", auth_params.length);
    http.send( auth_params );
   }}}


== 获取token ==
  * token使用在提交写请求的时候需要的一个认证信息
  * 请求URL:https://www.google.com/reader/api/0/token
  * 方法:GET
  * 参数:
    # client: 客户端名称
    # ck：时间戳
  * 返回token字符串
  * 代码示范:
  {{{
    var auth = //之前clientLogin获得的
    var sid = //之前clientLogin获得的
    var token
    var http = new XMLHttpRequest();
    http.onreadystatechange = function() {
        if (http.readyState == XMLHttpRequest.DONE) {
            if(http.status==200){
                token = http.responseText
            }
        }
    }
    http.open("GET", "https://www.google.com/reader/api/0/token?client=scroll&ck="+Number(new Date()))
    http.setRequestHeader("Authorization","GoogleLogin auth="+auth);
    http.setRequestHeader("Cookie","SID="+sid);
    http.send()
  }}}

==获取列表==

===标签列表===
  * 获取你的所有标签信息
  * 请求URL:https://www.google.com/reader/api/0/tag/list
  * 方法:GET
  * 参数:
    # client: 客户端名称
    # ck：时间戳
    # output:输出结果类型，如json
  * 返回：如果你已登录google,点击查看https://www.google.com/reader/api/0/tag/list?output=json
  * 代码示范:
  {{{
var http = new XMLHttpRequest();
    http.onreadystatechange = function() {
        if (http.readyState == XMLHttpRequest.DONE) {
            if(http.status==200){
                var result = JSON.parse(http.responseText)['tags']
                //
            }
        }
    }
    console.log("http GET "+source)
    http.open("GET", source);
    http.setRequestHeader("Authorization","GoogleLogin auth="+auth);
    http.setRequestHeader("Cookie","SID="+sid);
    http.setRequestHeader("accept-encoding", "gzip, deflate")
    http.send()
  }}}



===订阅列表===
  * 获取你的所有订阅信息
  * 请求URL:https://www.google.com/reader/api/0/subscription/list
  * 方法:GET
  * 参数:
    # client: 客户端名称
    # ck：时间戳
    # output:输出结果类型，如json
  * 返回：如果你已登录google,点击查看https://www.google.com/reader/api/0/subscription/list?output=json
  * 代码示范:
  {{{
var http = new XMLHttpRequest();
    http.onreadystatechange = function() {
        if (http.readyState == XMLHttpRequest.DONE) {
            if(http.status==200){
                var result = JSON.parse(http.responseText)['subscriptions']
                //
            }
        }
    }
    console.log("http GET "+source)
    http.open("GET", source);
    http.setRequestHeader("Authorization","GoogleLogin auth="+auth);
    http.setRequestHeader("Cookie","SID="+sid);
    http.setRequestHeader("accept-encoding", "gzip, deflate")
    http.send()
  }}}

===设置偏好列表===


===未读计数列表===

